rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================
    // SECURITY FUNCTIONS
    // ============================================
    
    /**
     * Check if user is authenticated
     */
    function signedIn() {
      return request.auth != null;
    }
    
    /**
     * Check if user is a member of a specific family
     * Uses subcollection: families/{familyId}/members/{userId}
     */
    function isMember(familyId) {
      return signedIn() &&
        exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid));
    }
    
    /**
     * Check if user is the document owner
     */
    function isOwner(userId) {
      return signedIn() && request.auth.uid == userId;
    }
    
    /**
     * Check if user is a parent/admin in the family
     * Requires role field in member document
     */
    function isParent(familyId) {
      return isMember(familyId) &&
        get(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)).data.role in ['parent', 'admin', 'parent-admin'];
    }
    
    /**
     * Check if user is a super admin
     */
    function isSuperAdmin() {
      return signedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
    
    /**
     * Check if user can change roles (only Cloud Functions or super admins)
     * Cloud Functions have admin privileges and can bypass these rules
     */
    function canChangeRole() {
      return isSuperAdmin() || 
        // Allow Cloud Functions to change roles (they have admin privileges)
        request.auth.token.firebase.sign_in_provider == 'custom';
    }
    
    // ============================================
    // USERS COLLECTION
    // ============================================
    
    match /users/{userId} {
      // Anyone authenticated can read any user profile
      allow read: if signedIn();
      
      // Users can write their own profile, but cannot change their role
      // Only Cloud Functions or super admins can change roles
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && 
        (!('role' in request.resource.data.diff(resource.data).affectedKeys()) || canChangeRole());
      allow delete: if isSuperAdmin();
    }
    
    // ============================================
    // FAMILIES COLLECTION
    // ============================================
    
    match /families/{familyId} {
      // Only family members can read/write family data
      allow read, write: if isMember(familyId);
      
      // Members subcollection
      match /members/{memberId} {
        // Members can read all members in their family
        allow read: if isMember(familyId);
        
        // Only parents can add/remove members
        allow create, delete: if isParent(familyId);
        
        // Members can update their own profile, parents can update anyone
        // But role changes are restricted to Cloud Functions or super admins
        allow update: if (isOwner(memberId) && 
          !('role' in request.resource.data.diff(resource.data).affectedKeys())) ||
          (isParent(familyId) && canChangeRole());
      }
      
      // Tasks subcollection
      match /tasks/{taskId} {
        allow read, write: if isMember(familyId);
      }
      
      // Safe Room messages subcollection
      match /saferoom/{msgId} {
        allow read, write: if isMember(familyId);
      }
      
      // Goals subcollection
      match /goals/{goalId} {
        allow read, write: if isMember(familyId);
      }
      
      // Penalties subcollection
      match /penalties/{penaltyId} {
        allow read: if isMember(familyId);
        allow write: if isParent(familyId);
      }
      
      // Achievements Templates subcollection
      match /achievementTemplates/{templateId} {
        allow read: if isMember(familyId);
        allow write: if isParent(familyId); // Only parents can create/edit templates
      }
      
      // Leaderboards subcollection
      match /leaderboards/{userId} {
        allow read: if isMember(familyId);
        allow write: if isMember(familyId) && isOwner(userId); // Users can update their own score
      }
      
      // Member achievements subcollection
      match /members/{memberId}/achievements/{achievementId} {
        allow read: if isMember(familyId);
        allow write: if isMember(familyId) && isOwner(memberId); // Users can update their own achievements
      }
      
      // Calendar/Events subcollection
      match /events/{eventId} {
        allow read, write: if isMember(familyId);
      }
      
      // Schedules subcollection
      match /schedules/{scheduleId} {
        allow read, write: if isMember(familyId);
      }
      
      // Reminders subcollection
      match /reminders/{reminderId} {
        allow read, write: if isMember(familyId);
      }
      
      // Shopping lists subcollection
      match /shopping_lists/{listId} {
        allow read, write: if isMember(familyId);
      }
      
      // Shopping items subcollection
      match /shopping_items/{itemId} {
        allow read, write: if isMember(familyId);
      }
    }
    
    // ============================================
    // LEGACY TOP-LEVEL COLLECTIONS
    // (For backward compatibility - migrate to families subcollections)
    // ============================================
    
    match /tasks/{taskId} {
      allow read, write: if signedIn() && 
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
    }
    
    match /safe_room_messages/{messageId} {
      allow read, write: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
    }
    
    match /voice_notes/{noteId} {
      allow read, write: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
    }
    
    match /family_members/{familyId}/users/{userId} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid));
      allow write: if signedIn() && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)).data.role in ['parent', 'admin']);
    }
    
    // ============================================
    // GOALS COLLECTION (TOP-LEVEL)
    // ============================================
    
    match /goals/{goalId} {
      // Allow read/write for development (temporary - very permissive)
      allow read, write: if true;
      
      // Production rule (commented for now)
      // allow read, write: if signedIn() && 
      //   exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
    }
    
    // ============================================
    // MILESTONES COLLECTION (TOP-LEVEL)
    // ============================================
    
    match /milestones/{milestoneId} {
      // Allow read/write for development (temporary - very permissive)
      allow read, write: if true;
    }
    
    // ============================================
    // REFLECTIONS COLLECTION (TOP-LEVEL)
    // ============================================
    
    match /reflections/{reflectionId} {
      // Allow read/write for development (temporary - very permissive)
      allow read, write: if true;
    }
    
    // ============================================
    // NOTIFICATION SETTINGS
    // ============================================
    
    match /notification_settings/{familyId} {
      allow read, write: if isMember(familyId);
    }
    
    // ============================================
    // SHOPPING COLLECTIONS (TOP-LEVEL)
    // ============================================
    
    match /shopping_stores/{storeId} {
      // Public read for all authenticated users
      allow read: if signedIn();
      // Only allow writes for authenticated users
      allow write: if signedIn();
    }
    
    match /shopping_products/{productId} {
      // Public read for all authenticated users
      allow read: if signedIn();
      // Only allow writes for authenticated users
      allow write: if signedIn();
    }
    
    match /price_observations/{priceId} {
      allow read: if signedIn();
      allow write: if signedIn();
    }
    
    // ============================================
    // FEATURE FLAGS & PLUS FEATURES
    // ============================================
    
    match /feature_flags/{familyId} {
      allow read: if isMember(familyId);
      allow write: if isParent(familyId);
    }
    
    match /emergency_logs/{logId} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
      allow create: if signedIn() && 
        exists(/databases/$(database)/documents/families/$(request.resource.data.familyId)/members/$(request.auth.uid)) &&
        request.resource.data.fromUid == request.auth.uid;
    }
    
    match /calls/{callId} {
      allow read, write: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
    }
    
    match /locations/{userId} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(get(/databases/$(database)/documents/locations/$(userId)).data.familyId)/members/$(request.auth.uid));
      allow write: if isOwner(userId);
    }
    
    match /location_history/{userId}/{historyDoc} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(get(/databases/$(database)/documents/locations/$(userId)).data.familyId)/members/$(request.auth.uid));
      allow write: if isOwner(userId);
    }
    
    match /user_consent/{userId} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
      allow write: if isOwner(userId) || 
        (signedIn() && get(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid)).data.role in ['parent', 'admin']);
    }
    
    match /analytics/{logId} {
      allow read: if signedIn() &&
        exists(/databases/$(database)/documents/families/$(resource.data.familyId)/members/$(request.auth.uid));
      allow create: if signedIn() && 
        exists(/databases/$(database)/documents/families/$(request.resource.data.familyId)/members/$(request.auth.uid)) &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // ============================================
    // ROBUST REGISTRATION SYSTEM COLLECTIONS
    // ============================================
    
    // Family invitation codes
    match /families/{familyId}/codes/{codeId} {
      allow read: if isParent(familyId);
      allow write: if isParent(familyId);
    }
    
    // Admin activation requests
    match /adminRequests/{userId} {
      allow read: if isOwner(userId) || isSuperAdmin();
      allow write: if isOwner(userId) || canChangeRole();
    }
    
    // Stripe subscriptions
    match /subscriptions/{familyId} {
      allow read: if isParent(familyId) || isSuperAdmin();
      allow write: if canChangeRole();
    }
    
    // Daily usage tracking
    match /usageDaily/{docId} {
      allow read: if isParent(resource.data.familyId) || isSuperAdmin();
      allow write: if false; // Only backend can write
    }
    
    // System configuration
    match /system/config {
      allow read: if signedIn();
      allow write: if isSuperAdmin();
    }
    
    // ============================================
    // DEVELOPMENT & TEST COLLECTIONS
    // ============================================
    
    // Test connection collection (for development)
    match /_test/{docId} {
      allow read, write: if true;
    }
    
    // ============================================
    // DEVELOPMENT MODE - ALL COLLECTIONS PERMISSIVE
    // ============================================
    
    // Safe Room Messages
    match /safe_room_messages/{messageId} {
      allow read, write: if true;
    }
    
    // Voice Notes
    match /voice_notes/{noteId} {
      allow read, write: if true;
    }
    
    // Video Notes
    match /video_notes/{noteId} {
      allow read, write: if true;
    }
    
    // Family Reminders
    match /family_reminders/{reminderId} {
      allow read, write: if true;
    }
    
    // Family Schedules
    match /family_schedules/{scheduleId} {
      allow read, write: if true;
    }
    
    // DEVELOPMENT: Allow access to all families collections for authenticated users
    match /families/{familyId} {
      allow read, write: if signedIn();
      
      // Allow access to all subcollections for authenticated users
      match /{subcollection}/{document} {
        allow read, write: if signedIn();
      }
    }
    
    // Any other collections for development
    match /{collection}/{document} {
      allow read, write: if signedIn();
    }
    
    // ============================================
    // PUBLIC DATA (for landing page/website)
    // ============================================
    
    // Public statistics for landing page
    match /public_stats/general {
      allow read: if true;
    }
    
    // Public testimonials for landing page
    match /public_testimonials/{testimonialId} {
      allow read: if true;
    }
    
    // ============================================
    // DEFAULT DENY ALL
    // ============================================
    
    // Deny access to any other collections not explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
